---
import type { SiteMeta } from "@/data/siteMeta";
import BaseHead from "@/components/BaseHead";
import SkipLink from "@/components/SkipLink";
import { siteConfig } from "@/site-config";
import ThemeToggle from "../components/ThemeToggle.astro";
import { MENU_LINKS } from "@/data/constants";

const year = new Date().getFullYear();

const url = new URL(Astro.request.url);

interface Props {
	meta: SiteMeta;
}

const {
	meta: { title, description = siteConfig.description, ogImage, articleDate },
} = Astro.props;

---

<script>
	import { toggleClass } from "@/utils";

	document.addEventListener("DOMContentLoaded", () => {
		const header = document.getElementById("main-header") as HTMLElement;
		const toggleMenuButton = document.getElementById("toggle-navigation-menu") as HTMLButtonElement;
		let menuOpen = false;

		toggleMenuButton.addEventListener("click", () => {
			toggleClass(header, "menu-open");
			menuOpen = !menuOpen;
			toggleMenuButton.setAttribute("aria-expanded", menuOpen.toString());
		});
	});
</script>


<html lang={siteConfig.lang}>
	<head>
		<BaseHead title={title} description={description} ogImage={ogImage} articleDate={articleDate} />
		<script define:vars={{ siteConfig }}>
			const root = document.documentElement;
			const colorThemeMetaTag = document.querySelector("meta[name='theme-color']");

			// get user preference of dark mode, 1st local storage, 2nd browser
			function getThemePreference() {
				if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
			}

			const isDark = getThemePreference() === "dark";

			// watch document element class attribute and update user preference when it changes.
			const observer = new MutationObserver(() => {
				const rootIsDark = root.classList.contains("dark");
				// set the meta attribute
				colorThemeMetaTag.setAttribute(
					"content",
					siteConfig[rootIsDark ? "themeColorDark" : "themeColorLight"]
				);
				// store user preference
				if (typeof localStorage !== "undefined") {
					localStorage.setItem("theme", rootIsDark ? "dark" : "light");
				}
			});
			observer.observe(root, { attributeFilter: ["class"] });

			// initailse root class attribute
			root.classList.toggle("dark", isDark);
		</script>
	</head>
	<body>
		<SkipLink />
		<header id="main-header" class="group relative mb-28 flex items-center sm:ps-[4.5rem]">
			<div class="flex sm:flex-col">
				<a
					href="/"
					class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
					aria-current={url.pathname === "/" ? "page" : false}
				>
					<svg
						class="me-3 h-10 w-6 sm:absolute sm:start-[-4.5rem] sm:me-0 sm:h-20 sm:w-12"
						aria-hidden="true"
						focusable="false"
						fill="none"
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 272 480"
					>
						<title>Logo</title>
						<path
							d="M181.334 93.333v-40L226.667 80v40l-45.333-26.667ZM136.001 53.333 90.667 26.667v426.666L136.001 480V53.333Z"
							fill="#B04304"></path>
						<path
							d="m136.001 119.944 45.333-26.667 45.333 26.667-45.333 26.667-45.333-26.667ZM90.667 26.667 136.001 0l45.333 26.667-45.333 26.666-45.334-26.666ZM181.334 53.277l45.333-26.666L272 53.277l-45.333 26.667-45.333-26.667ZM0 213.277l45.333-26.667 45.334 26.667-45.334 26.667L0 213.277ZM136 239.944l-45.333-26.667v53.333L136 239.944Z"
							fill="#FF5D01"></path>
						<path
							d="m136 53.333 45.333-26.666v120L226.667 120V80L272 53.333V160l-90.667 53.333v240L136 480V306.667L45.334 360V240l45.333-26.667v53.334L136 240V53.333Z"
							fill="#53C68C"></path>
						<path d="M45.334 240 0 213.334v120L45.334 360V240Z" fill="#B04304"></path>
					</svg>
					<span class="text-xl font-bold sm:text-2xl">Ewan Smith</span>
				</a>
				<nav
					id="navigation-menu"
					class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-[--theme-menu-bg] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-dashed sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
					aria-label="Main menu"
				>
					{
						MENU_LINKS.map((link) => (
							<a
								href={link.path}
								class="px-4 py-4 sm:py-0 sm:hover:underline"
								aria-current={url.pathname === link.path ? "page" : false}
								rel="prefetch"
							>
								{link.title}
							</a>
						))
					}
				</nav>
			</div>
			<ThemeToggle />
			<button
				id="toggle-navigation-menu"
				class="group relative ms-8 h-7 w-7 sm:invisible sm:hidden"
				type="button"
				aria-label="Open main menu"
				aria-expanded="false"
				aria-haspopup="menu"
			>
				<svg
					id="line-svg"
					class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
					aria-hidden="true"
					focusable="false"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9h16.5m-16.5 6.75h16.5"></path>
				</svg>
				<svg
					id="cross-svg"
					class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
					class="text-accent"
					aria-hidden="true"
					focusable="false"
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
		</header>
		<main id="main" class="flex-1">
			<slot />
		</main>
		<footer
	class="mt-auto flex w-full flex-col items-center justify-center gap-y-2 pb-4 pt-20 text-center align-top text-gray-500 sm:flex-row sm:justify-between sm:text-xs"
>
	<div class="me-0 sm:me-4">
		Copyright &copy; {year}
		<span aria-label="rocket emoji">ðŸš€</span>
		Ewan Smith
	</div>
	<nav
		aria-label="More on this site"
		class="flex gap-x-2 sm:gap-x-0 sm:divide-x sm:divide-gray-500"
	>
		{
			MENU_LINKS.map((link) => (
				<a
					href={link.path}
					class="sm:hover:text-textColor px-4 py-2 sm:px-2 sm:py-0 sm:hover:underline"
				>
					{link.title}
				</a>
			))
		}
	</nav>
</footer>
	</body>
</html>
